plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'guru.qa'
version '1.0-SNAPSHOT'

def allureVersion = "2.18.1",
    selenideVersion = "6.6.4",
    junitVersion = "5.8.2",
    slf4jVersion = '1.7.36'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

dependencies {
    testImplementation 'com.codeborne:selenide:6.6.3',
            'io.qameta.allure:allure-selenide:2.18.1',
            'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2',
            'org.slf4j:slf4j-simple:1.7.36'
}

repositories {
    mavenCentral()
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}